[{"D:\\react\\cabage\\todo-app\\src\\index.js":"1","D:\\react\\cabage\\todo-app\\src\\App.js":"2","D:\\react\\cabage\\todo-app\\src\\reportWebVitals.js":"3","D:\\react\\cabage\\todo-app\\src\\ToDoList.js":"4","D:\\react\\cabage\\todo-app\\src\\component\\PList.js":"5"},{"size":502,"mtime":1608107251255,"results":"6","hashOfConfig":"7"},{"size":199,"mtime":1608111620743,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1816,"mtime":1608190921201,"results":"10","hashOfConfig":"7"},{"size":861,"mtime":1608185846527,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nnzo4d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\cabage\\todo-app\\src\\index.js",[],["25","26"],"D:\\react\\cabage\\todo-app\\src\\App.js",["27"],"import logo from './logo.svg';\nimport './App.scss';\nimport ToDoList from './ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\react\\cabage\\todo-app\\src\\reportWebVitals.js",[],"D:\\react\\cabage\\todo-app\\src\\ToDoList.js",["28"],"import React,{useState} from 'react';\r\nimport {Button, Input,Row,Col,Card,List,Alert } from 'antd'\r\n\r\nimport PList from './component/PList';\r\n\r\nconst ToDoList = () =>{\r\n    \r\n \r\n    const [todoValue,setTodoValue]  = useState(\"\");\r\n    const [todo,setTodo]  = useState([]);\r\n\r\n    \r\n    const handleAddTodo =() =>{\r\n        if(todoValue === ''){\r\n            alert('Plead insert the Task !')\r\n        }else{\r\n            const filterValue = todo.find(td => td === todoValue);\r\n            if(filterValue !== undefined ){\r\n              alert('Todo title already added');\r\n            }else\r\n            {\r\n              const listTodo =[...todo,todoValue];\r\n              setTodo(listTodo);\r\n            }\r\n          }\r\n      }\r\n\r\n    const removeItem = (index) =>{\r\n      const remainingItem =todo.filter(td => todo.indexOf(td)!== index);\r\n      setTodo(remainingItem);\r\n    }\r\n   \r\n    return(\r\n        <div >\r\n          <Card size=\"small\" >\r\n          <div className=\"\">\r\n            <h1>ToDo List</h1>\r\n            \r\n              <Row className=\"addbox\">\r\n                <Col flex={4}>\r\n                <Input  type=\"text\" placeholder=\"Add an Item\" onChange={(e) => setTodoValue(e.target.value)} />\r\n                </Col>\r\n                <Col flex={1}>\r\n                <Button type=\"primary\" style={{ marginLeft: 8 }} onClick={handleAddTodo}>Add</Button>\r\n                </Col>\r\n              </Row>\r\n    \r\n              <List className=\"container listbox\"   size=\"small\" bordered>\r\n              {\r\n                todo.map(td => \r\n                  <PList td={td} todovalue={todoValue} todo={todo} removeItem={removeItem} />)\r\n              }\r\n            \r\n              </List>\r\n     \r\n      \r\n  \r\n            \r\n            </div>\r\n          </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","D:\\react\\cabage\\todo-app\\src\\component\\PList.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":2,"column":41,"nodeType":"35","messageId":"36","endLine":2,"endColumn":46},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]